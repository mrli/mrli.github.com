<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | lioooo]]></title>
  <link href="http://mrli.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://mrli.github.io/"/>
  <updated>2014-04-07T17:16:01+08:00</updated>
  <id>http://mrli.github.io/</id>
  <author>
    <name><![CDATA[lioooo]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Docker的安装和使用]]></title>
    <link href="http://mrli.github.io/blog/2014/03/22/install-docker/"/>
    <updated>2014-03-22T16:35:37+08:00</updated>
    <id>http://mrli.github.io/blog/2014/03/22/install-docker</id>
    <content type="html"><![CDATA[<h4>Docker的安装</h4>

<p>Docker 是现在比较火的工具 <a href="http://www.oschina.net/search?scope=project&amp;q=docker">具体介绍</a>
下面记录在<a href="http://www.oschina.net/search?scope=project&amp;q=virtualbox">virtualboxVM</a>中的安装步骤 <a href="http://docs.docker.io/en/latest/installation/rhel/">Install Docker</a></p>

<ol>
<li><p>若没有安装过docker: <code>sudo yum -y install docker-io</code></p></li>
<li><p>若安装过docker: <code>sudo yum -y update docker-io</code></p></li>
<li><p>启动docker服务: <code>sudo service docker start</code></p></li>
<li><p>设置docker开机自启: <code>sudo chkconfig docker on</code></p></li>
<li><p>测试并克隆centos到docker中: <code>sudo docker run -i -t centos /bin/bash</code></p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[克隆Virtualbox虚拟机后无Ip的解决方案]]></title>
    <link href="http://mrli.github.io/blog/2014/03/05/virtualbox-no-ip-config-issue/"/>
    <updated>2014-03-05T16:41:19+08:00</updated>
    <id>http://mrli.github.io/blog/2014/03/05/virtualbox-no-ip-config-issue</id>
    <content type="html"><![CDATA[<p> VirtualBox是一个免费的虚拟机软件,支持多平台运行.当开发需要运行多个虚拟机时.
 采用VBox的复制功能就显得特别方便.但是复制一个完整的镜像后.会发现新的镜像分配不到ip地址.就算你选择了<strong><em>初始化网卡MAC地址</em></strong>复制之后也往往会发现网络无法使用这个时候我们就需要手动做些处理.下面介绍需要做一些什么样的处理.</p>

<ol>
<li><p>删除网络配置文件:</p>

<p><code>sudo rm -f /etc/udev/rules.d/70-persistent-net.rules</code></p></li>
<li><p>删除<strong><em>/etc/sysconfig/network-scripts/ifcfg-eth0</em></strong> 中的 <strong><em>HWADDR</em></strong> 以及 <strong><em>UUID</em></strong> 配置项.</p></li>
<li><p>在 <strong><em>IPADDR</em></strong> 配置项中初始化好需要的IP地址例如 <strong><em>192.168.1.117</em></strong></p></li>
<li><p>重启系统 <code>sudo reboot</code></p></li>
<li><p>重新登录系统后 <code>ifconfig</code> 查看是否已经分配好了IP</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Puppet 的环境搭建及使用]]></title>
    <link href="http://mrli.github.io/blog/2014/03/02/puppet-study/"/>
    <updated>2014-03-02T16:44:10+08:00</updated>
    <id>http://mrli.github.io/blog/2014/03/02/puppet-study</id>
    <content type="html"><![CDATA[<h5>软件包的安装</h5>

<p>  <strong><em>puppet 的安装有多种方式,这里使用yum的方式安装</em></strong></p>

<ol>
<li><p> 首先安装ruby环境<a href="https://www.ruby-lang.org/en/installation/">Ruby的安装</a></p></li>
<li><p> 安装puppet  <code>sudo yum install -y puppet-server puppet</code> <a href="http://docs.puppetlabs.com/guides/installation.html#red-hat-enterprise-linux-and-derivatives">Yum 安装Puppet</a></p></li>
<li><p> 检查是否安装成功 <code>ruby -v ; puppet --version</code> 若输出版本号表明安装成功</p></li>
</ol>


<p> <strong><em>puppet 的安装有多种方式,这里使用ruby的gem包的方式安装</em></strong></p>

<ol>
<li><p> 首先安装ruby环境 <code>brew install ruby</code> <a href="https://www.ruby-lang.org/en/installation/">Ruby的安装</a></p>

<p>1.1 安装puppet所依赖的第三方包 <code>gem install ruby-shadow -v 2.3.2</code></p></li>
<li><p> 安装puppet gem <code>gem install puppet -v 3.4.0</code> <a href="http://docs.puppetlabs.com/guides/installation.html">Puppet 的安装</a></p></li>
<li><p> 检查是否安装成功 <code>ruby -v ; puppet --version</code> 若输出版本号表明安装成功</p></li>
</ol>


<hr />

<h5>生成puppet的配置文件</h5>

<p>文章参考: <a href="http://docs.puppetlabs.com/guides/installation.html#mac-os-x">Gem 安装puppet的设置</a></p>

<ol>
<li><p>新建文件目录 <code>sudo mkdir -p /etc/puppet</code></p></li>
<li><p>拷贝puppet源目录中的: <code>cp sudo cp /usr/local/lib/ruby/gems/1.9.1/gems/puppet-3.4.0/conf/auth.conf /etc/puppet/</code></p></li>
<li><p>新建puppet的主配置文件 <code>sudo touch /etc/puppet/puppet.conf</code></p></li>
<li><p>打开puppet master 的<strong><em>8140</em></strong>端口: <code>sudo vi /etc/sysconfig/iptables</code> 添加如下内容, <strong><em>-A INPUT -m state &mdash;state NEW -m tcp -p tcp &mdash;dport 8140 -j ACCEPT</em></strong></p></li>
</ol>


<hr />

<h5>设置puppet</h5>

<p><a href="http://docs.puppetlabs.com/guides/configuring.html">官方配置文档</a></p>

<p>```</p>

<p>Master: 192.168.1.116 => master.puppet.org
Agent : 192.168.1.117 => agent001.puppet.org</p>

<p>```</p>

<ol>
<li><p>设置puppet master 服务器</p>

<p> 1.1 修改服务器端的host方便记忆和阅读 <code>sudo echo 'HOSTNAME=master.puppet.org' &gt;&gt; /etc/sysconfig/network</code></p>

<p> 1.2 添加一个测试文件,修改<strong><em>site.pp</em></strong> <code>sudo vi /etc/puppet/manifests/site.pp</code></p>

<p> <strong><em> node default{file{&ldquo;/tmp/agent001-puppet-org.txt&rdquo;:content=>&ldquo;this is agent001.puppet.org test file&rdquo;;}}</em></strong></p></li>
</ol>


<h5>其它</h5>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu 搭建rails 开发环境]]></title>
    <link href="http://mrli.github.io/blog/2012/06/30/ubuntu-da-jian-rails-kai-fa-huan-jing/"/>
    <updated>2012-06-30T23:07:00+08:00</updated>
    <id>http://mrli.github.io/blog/2012/06/30/ubuntu-da-jian-rails-kai-fa-huan-jing</id>
    <content type="html"><![CDATA[<h3>利用这个星期六我在ubuntu上搭建了一个rails的开发环境包括:</h3>

<p>nginx,passenger,mysql,imagemagick,mongodb etc 等一些常用工具的安装和调试.<br/>
下面我把自己搭建的过程给分享出来,希望对你有用.</p>

<h2>修改终端的语言</h2>

<pre><code>sudo nano /etc/default/locale1
</code></pre>

<p>  修改默认的</p>

<pre><code>LANG=zh_CN.UTF-8
LANGUAGE=zh_CN:zh
</code></pre>

<p>  为:</p>

<pre><code>LANG="en_US.UTF-8"
LANGUAGE="en_US:en"
</code></pre>

<h2>下载并安装ruby</h2>

<pre><code>sudo apt-get remove --purge ruby1.8 #   删除原来的ruby1.8

* mkidr -p /opt/tools &amp;&amp; cd /opt/tools &amp;&amp; wget http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p194.tar.gz 

tar -xvf ruby-1.9.3-p194.tar.gz &amp;&amp; ./configure  --prefix=/opt/ruby &amp;&amp; make &amp;&amp; make install

nano ~/.bash_profile 添加内容 export PATH=/opt/ruby/bin:$PATH  # 把编译的ruby 加到环境变量中去让系统使用手动编译的ruby

source ~/.bash_profile  ( . ~/.bash_profile) # 使刚才修改的变量生效
</code></pre>

<h2>下载并安装mongodb:</h2>

<p><strong>mongodb用来存关系性数据非常方便,什么是关系性数据?类似于我可以在一个字段中存一个数组,一个hash,甚至一个对象等</strong></p>

<pre><code>cd /opt/tools &amp;&amp; wget http://fastdl.mongodb.org/linux/ongodb-linux-x86_64-2.0.6.tgz 

tar -xvf mongodb-linux-x86_64-2.0.6.tgz &amp;&amp; mv mongodb-linux-x86_64-2.0.6 ../mongodb 

mkdir -p /opt/mongodb/db /opt/mongodb/log &amp;&amp; touch /opt/mongodb/log/mongo.log       #创建mongodb所依赖的文件 

sudo mkdir -p /data/db &amp;&amp; sudo chown -R cici:cici /data/db # 生成一个数据存放的目录必须的

sudo nano /etc/rc.local ==&gt; /opt/mongodb/bin/mongod --fork --dbpath=/opt/mongodb/db     -   -logpath=/opt/mongodb/log/mongo.log #把mongodb 开机自起服务开起来

nano ~/.bash_profile 修改内容为 export PATH=/opt/ruby/bin:/opt/mongodb/bin:$PATH  #        把mongodb加到环境
* source ~/.bash_profile  ( . ~/.bash_profile) # 使刚才修改的变量生效
</code></pre>

<h2>以下内容中涉及到的库和安装包是通过ftp的方式上传到你本机的(如果你在测试中没有找到库,那你就到网上去下载对应的包就行了)</h2>

<h3>安装imagemagick(用于处理图片)</h3>

<pre><code>* cd /opt/tools &amp;&amp; tar -xvf imagemagick-6.7.1-1.tgz &amp;&amp; cd trevor-ImageMagick-e035047

* ./configure --prefix=/usr --with-bzlib=yes --with-fontconfig=yes --with-freetype=yes  
--with-gslib=yes --with-gvc=yes --with-jpeg=yes --with-jp2=yes --with-png=yes --with-   
tiff=yes 

* make &amp;&amp; sudo make install 

* convert --version #如果出现了提示符号就说明已经安装好了. 
</code></pre>

<h3>安装nginx(用于处理服务请求)</h3>

<pre><code>* gem install passenger  -v 3.0.12

* passenger-install-nginx-module
    期间会出现各种库文件的找不到,按照nginx安装教程的指导就可以解决.这里记录一个比较难的问题
    To install OpenSSL support for Ruby:
    Please run apt-get install libopenssl-ruby as root.

* cd /opt/tools/ruby-1.9.3-p194/ext/openssl &amp;&amp; ruby extconf.rb &amp;&amp; make &amp;&amp; make install

* passenger-install-nginx-module #按照提示再次安装 

* nano ~/.bash_profile 修改内容为 export PATH=/opt/ruby/bin:/opt/mongodb/bin:/opt/nginx/sbin:$PATH  # 把mongodb加到环境


* source ~/.bash_profile  ( . ~/.bash_profile) # 使刚才修改的变量生效

* mkdir -p include /opt/nginx/conf/sites-enabled #用于放置我们的配置文件

* nano /opt/nginx/conf/nginx.conf 添加内容" include /opt/nginx/conf/sites-  
enabled/*"到最后一行:

* sudo cp /opt/tools/for_centos/nginxd /etc/init.d/nginxd #把nginx的开机启动脚本加到init. 
d中

* sudo chmod +x /etc/init.d/nginxd #使之成为可执行文件 
</code></pre>

<h3>安装 mysql (参考:<a href="https://help.ubuntu.com/8.04/serverguide/mysql.html%EF%BC%89">https://help.ubuntu.com/8.04/serverguide/mysql.html%EF%BC%89</a></h3>

<pre><code>* sudo apt-get install mysql-server 
</code></pre>
]]></content>
  </entry>
  
</feed>
